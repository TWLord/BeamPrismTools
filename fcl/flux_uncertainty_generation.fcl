BEGIN_PROLOG

Nominal_Prediction_Input: {
  InputFile: "%C_OptimizedEngineeredNov2017Review_uncert_binning_wppfx.root"
  InputHistName: "LBNF_%S_flux_Nom"
}

DirectSyst_base: {
  Type: "Direct"

  Nominal: @local::Nominal_Prediction_Input

  Varied: {
    InputHistName: "LBNF_%S_flux"
  }

  dump_diagnostics: true
}

HornCurrent: @local::DirectSyst_base
HornCurrent.Name: "HornCurrent"
HornCurrent.Varied.InputFile: "%C_OptimizedEngineeredNov2017Review_uncert_binning_HCp1.root"

DecayPipeRadius: @local::DirectSyst_base
DecayPipeRadius.Name: "DecayPipeRadius"
DecayPipeRadius.Varied.InputFile: "%C_OptimizedEngineeredNov2017Review_uncert_binning_DPRp1.root"

WaterLayer: @local::DirectSyst_base
WaterLayer.Name: "WaterLayer"
WaterLayer.Varied.InputFile: "%C_OptimizedEngineeredNov2017Review_uncert_binning_WLp1.root"

FocussingTweaks: [@local::HornCurrent, @local::DecayPipeRadius, @local::WaterLayer]

Horn1XShift: @local::DirectSyst_base
Horn1XShift.Name: "Horn1XShift"
Horn1XShift.Varied.InputFile: "%C_OptimizedEngineeredNov2017Review_uncert_binning_Horn1XShift.root"

AlignmentTweaks: [@local::Horn1XShift]
# AlignmentTweaks: []

DirectTweaks: [@sequence::FocussingTweaks, @sequence::AlignmentTweaks]

PPFX: {
  Type: "Thrown"
  Name: "PPFX"
  NThrows: 100

  Nominal: {
    InputFile: "%C_OptimizedEngineeredNov2017Review_uncert_binning_wppfx.root"
    InputHistName: "LBNF_%S_flux_CV"
  }

  InputFile: "%C_OptimizedEngineeredNov2017Review_uncert_binning_wppfx.root"
  VariedHistName: "LBNF_%S_flux_univ_%i"

  dump_diagnostics: true
}

AllConfigurations: [ND_nu, ND_nubar, FD_nu, FD_nubar]
numode_Configurations: [ND_nu, FD_nu]

numuOnly: [numu]
AllSpecies: [numu, nue, numubar, nuebar]

NominalOffAxisRange: "0_32.25:0.5"
ShortOffAxisRange: "0_2.25:0.5"
OnAxisOnly: "0_0:0.5"
OffAxisOnly: "25_25:0.5"

END_PROLOG

FluxUncertainty: {

  use_Spectra: true # use spectra, if not, use Eigen (very slow for anything larger than a few hundred columns)
  num_eigenvalues: 50 # Dump out the 'tweak' definitions for the top X most important eigen values

  FluxSlicesDescriptor_ND_nu: @local::NominalOffAxisRange
  # FluxSlicesDescriptor_ND_nu: @local::ShortOffAxisRange
  # FluxSlicesDescriptor_ND_nu: @local::OnAxisOnly
  Species: @local::AllSpecies
  # Species: [numu]
  # Configurations: @local::AllConfigurations
  # Configurations: @local::numode_Configurations
  Configurations: [ND_nu]

  # FluxSlicesDescriptor_ND_nu: @local::OnAxisOnly
  # FluxSlicesDescriptor_ND_nubar: @local::OnAxisOnly
  # Species: @local::numuOnly
  # Configurations: @local::numode_Configurations

  Tweaks: [@local::PPFX, @sequence::DirectTweaks]
  # Tweaks: [@sequence::DirectTweaks]

}

# Set off axis descriptor the same for nu and nubar beam modes
FluxUncertainty.FluxSlicesDescriptor_ND_nubar: @local::FluxUncertainty.FluxSlicesDescriptor_ND_nu


FluxUncertainty.OutputFile: "FluxCovmatND_numu_numode_OffAxis.root"
FluxUncertainty.RecreateOutputFile: true
FluxUncertainty.WriteMatrices: false # For a 6kx6k matrix, this will be 512mb
FluxUncertainty.SaveCAFAnaFormat: true # Save output in the format expected by CAFAna
FluxUncertainty.SaveTH1F: true # Convert output to TH1Fs to save disk space (calculations all done with double precision)
